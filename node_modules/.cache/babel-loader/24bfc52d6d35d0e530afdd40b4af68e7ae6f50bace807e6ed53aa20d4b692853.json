{"ast":null,"code":"var _jsxFileName = \"C:\\\\ppi3\\\\bioprep\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport data from \"./BD/DATA.json\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Variables.\n\n  console.log(data);\n  const [productos, setProductos] = useState(data); // useState me permite actualizar estas variables sin desmontar y montar el componente,\n\n  //promesa para obtener los datos.\n  function resolver() {\n    return new Promise((resolve, reject) => {\n      resolve(data);\n    });\n  }\n\n  //setear la promesa \n  useEffect(() => {\n    //useEfect me ayuda a que no se ejecute la funcion cada vez que se actualiza el componente si no solo cuando se monta.<<<<<<<<<\n\n    resolver().then(resolucion => {\n      setProductos(resolucion);\n    });\n  }, [productos, setProductos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: productos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+m2lzc1QRLvoiIgo4fgHkzO+his=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","console","log","productos","setProductos","resolver","Promise","resolve","reject","then","resolucion","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ppi3/bioprep/src/App.js"],"sourcesContent":["import data from \"./BD/DATA.json\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n\n  //Variables.\n\n  console.log(data)\n\n  const [productos, setProductos] = useState(data); // useState me permite actualizar estas variables sin desmontar y montar el componente,\n\n\n  //promesa para obtener los datos.\n  function resolver(){return new Promise((resolve, reject)=>{\n    resolve(data);\n   })\n  }\n  \n    //setear la promesa \n  useEffect(() =>{ //useEfect me ayuda a que no se ejecute la funcion cada vez que se actualiza el componente si no solo cuando se monta.<<<<<<<<<\n\n    \n\n    resolver().then(\n      \n      (resolucion) => {\n\n      setProductos(resolucion);\n        \n       }\n      )\n       \n  },[productos, setProductos])\n  \n\n    \n\n\n  return (\n    <div className=\"App\">\n\n      { \n      productos.length > 0 &&  \n        <div>}</div>\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;;EAEAC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EAEjB,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;;EAGlD;EACA,SAASY,QAAQA,CAAA,EAAE;IAAC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAG;MACxDD,OAAO,CAACd,IAAI,CAAC;IACd,CAAC,CAAC;EACH;;EAEE;EACFG,SAAS,CAAC,MAAK;IAAE;;IAIfS,QAAQ,CAAC,CAAC,CAACI,IAAI,CAEZC,UAAU,IAAK;MAEhBN,YAAY,CAACM,UAAU,CAAC;IAEvB,CACD,CAAC;EAEL,CAAC,EAAC,CAACP,SAAS,EAAEC,YAAY,CAAC,CAAC;EAM5B,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EAGlBT,SAAS,CAACU,MAAM,GAAG,CAAC,iBAClBf,OAAA;MAAAc,QAAA,EAAK;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIX,CAAC;AAEV;AAACjB,EAAA,CA9CQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}